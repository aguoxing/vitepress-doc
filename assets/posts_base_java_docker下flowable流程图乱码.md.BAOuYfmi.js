import{_ as s,c as a,o as n,a2 as e}from"./chunks/framework.CQ12TVIp.js";const _=JSON.parse('{"title":"docker部署的springboot应用flowable流程图乱码","description":"docker、springboot、flowable","frontmatter":{"title":"docker部署的springboot应用flowable流程图乱码","description":"docker、springboot、flowable","date":"2022-08-09T00:00:00.000Z","category":"Bug","tags":["docker","flowable"]},"headers":[],"relativePath":"posts/base/java/docker下flowable流程图乱码.md","filePath":"posts/base/java/docker下flowable流程图乱码.md","lastUpdated":1691294280000}'),p={name:"posts/base/java/docker下flowable流程图乱码.md"},i=e(`<h3 id="docker部署的flowable流程图乱码" tabindex="-1">docker部署的flowable流程图乱码 <a class="header-anchor" href="#docker部署的flowable流程图乱码" aria-label="Permalink to &quot;docker部署的flowable流程图乱码&quot;">​</a></h3><p>原因：构建镜像使用的jdk没有需要的字体</p><p>将需要的字体提取，重新构建jdk镜像即可</p><p>docker 查看容器的长id</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> inspect</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{{.ID}}&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 短id</span></span></code></pre></div><p>docker复制文件至容器内</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 本地路径</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 容器长ID:容器路径</span></span></code></pre></div><p>将Windows下 C:\\Windows\\Fonts下的字体文件提取</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>simsun.ttc 宋体常规</span></span>
<span class="line"><span>simhei.ttf 黑体常规</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>#依赖镜像名称和ID</span></span>
<span class="line"><span>FROM centos:7</span></span>
<span class="line"><span>#指定镜像创建者信息</span></span>
<span class="line"><span>MAINTAINER admin</span></span>
<span class="line"><span>#切换工作目录</span></span>
<span class="line"><span>WORKDIR /usr</span></span>
<span class="line"><span>RUN mkdir /usr/local/java</span></span>
<span class="line"><span>#ADD 是相对路径jar,把java添加到容器中</span></span>
<span class="line"><span>ADD jdk-8u333-linux-x64.tar.gz /usr/local/java/</span></span>
<span class="line"><span>ADD simsun.ttc /usr/local/java/jdk1.8.0_333/jre/lib/fonts</span></span>
<span class="line"><span>ADD simhei.ttf /usr/local/java/jdk1.8.0_333/jre/lib/fonts</span></span>
<span class="line"><span>#配置java环境变量</span></span>
<span class="line"><span>ENV JAVA_HOME /usr/local/java/jdk1.8.0_333</span></span>
<span class="line"><span>ENV JRE_HOME $JAVA_HOME/jre</span></span>
<span class="line"><span>ENV CLASSPATH $JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib:$CLASSPATH</span></span>
<span class="line"><span>ENV PATH $JAVA_HOME/bin:$PATH</span></span></code></pre></div>`,10),l=[i];function t(o,c,d,r,h,k){return n(),a("div",null,l)}const g=s(p,[["render",t]]);export{_ as __pageData,g as default};
